<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///VAR
//main
direction = 0;
z = 64;
zhigh = 32;

//variabili disegno e animazione sprite
cur_sprite = spr_skin1;
anim_start = 0;
jump_frame = 8;
anim_speed = 0.5;

//variabili di calcolo
anim_counter = 0;
anim_cspeed = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DISEGNA SPRITE
var oth_dir = obj_player.direction; //direction = 0 - oth_dir = 90
var mom = anim_counter - anim_start;
var diff_dir = max(oth_dir, direction) -min(oth_dir, direction);
if( (diff_dir &lt; 22.5 and diff_dir &gt;= 0) or (diff_dir &lt; 360 and diff_dir &gt;= 360 - 22.5) )
{
    anim_start = 4;
}
if(diff_dir &lt; 45 + 22.5 and diff_dir &gt;= 45 - 22.5)
{
    anim_start = 5;
}
if(diff_dir &lt; 90 + 22.5 and diff_dir &gt;= 90 - 22.5)
{
    anim_start = 6;
}
if(diff_dir &lt; 135 + 22.5 and diff_dir &gt;= 135 - 22.5)
{
    anim_start = 7;
}
if(diff_dir &lt; 180 + 22.5 and diff_dir &gt;= 180 - 22.5)
{
    anim_start = 0;
}
if(diff_dir &lt; 225 + 22.5 and diff_dir &gt;= 225 - 22.5)
{
    anim_start = 1;
}
if(diff_dir &lt; 270 + 22.5 and diff_dir &gt;= 270 - 22.5)
{
    anim_start = 2;
}
if(diff_dir &lt; 315 + 22.5 and diff_dir &gt;= 315 - 22.5)
{
    anim_start = 3;
}
anim_counter = anim_start + mom;

var tex;
tex = sprite_get_texture(cur_sprite, anim_counter);
d3d_draw_wall(x-8*global.camsin,y-8*global.camcos,z +zhigh,
              x+8*global.camsin,y+8*global.camcos,z,tex,1,1);

//tempo fra un frame e l'altro
if(anim_cspeed &lt; 1)
{
    anim_cspeed += anim_speed;
}
else
{
    anim_cspeed = 0;
    if(anim_counter + jump_frame &lt; sprite_get_number(cur_sprite))
        anim_counter += jump_frame;
    else
        anim_counter = anim_start;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
